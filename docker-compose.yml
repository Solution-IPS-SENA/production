version: '2.1'

volumes:
  auth_microservice_database_sips:
  clinical_microservices_database_sips:
  valores_microservice_database_sips:

services:
  ############################## Auth database service ##############################
  auth_microservice_database_sips:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: auth
      MYSQL_DATABASE: auth
    expose:
      - 3306
    volumes:
      - auth_microservice_database_sips:/var/lib/mysql
    restart: always
    container_name: auth_microservice_database_sips
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  ############################## Clinical database service ##############################
  clinical_microservices_database_sips:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: solution
      MYSQL_DATABASE: solution
    expose:
      - 3306
    volumes:
      - clinical_microservices_database_sips:/var/lib/mysql
    restart: always
    container_name: clinical_microservices_database_sips
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  ############################## Valores database service ##############################
  valores_microservice_database_sips:
    build: 
      context: ./backend/api-valores/
      dockerfile: mongo.Dockerfile
    image: valores_microservice_database_sips
    expose:
      - 27017
    volumes:
      - valores_microservice_database_sips:/data/db
    restart: always
    container_name: valores_microservice_database_sips
    healthcheck:
      test:
      - CMD
      - mongo
      - --eval
      - "db.adminCommand('ping')"

  ############################## Frontend ##############################
  frontend_sips:
    build: ./frontend
    image: frontend_sips
    ports:
      - "30100:80"
    restart: always
    container_name: frontenf_sips

  ############################## Valores microservice ##############################
  valores_microservice_sips:
    build: ./backend/api-valores
    image: valores_microservice_sips
    ports:
      - "3700:3000"
    volumes:
      - ./backend/api-valores:/app
      - /app/node_modules
    restart: always
    container_name: valores_microservice_sips

  ############################## Auth microservice ##############################
  auth_microservice_sips:
    build: 
      context: ./backend
      args:
        - SRC_PATH=./Auth
    image: auth_microservice_sips
    environment:
      - DB_HOST=auth_microservice_database_sips
      - DB_PORT=3306
      - APP_PORT=3000
      - APP_HOST=0.0.0.0
    ports:
      - "3701:3000"
    restart: always
    container_name: auth_microservice_sips
    volumes:
      - ./backend/Auth:/app
    depends_on:
      auth_microservice_database_sips:
        condition: service_healthy

  ##############################  Laboratorio microservice ##############################
  laboratorio_microservice_sips:
    build: 
      context: ./backend
      args:
        - SRC_PATH=./Laboratorio
    image: laboratorio_microservice_sips
    environment:
      - DB_HOST=clinical_microservices_database_sips
      - DB_PORT=3306
      - APP_PORT=3000
      - APP_HOST=0.0.0.0
    ports:
      - "3702:3000"
    volumes:
      - ./backend/Laboratorio:/app
    restart: always
    container_name: laboratorio_microservice_sips
    depends_on:
      clinical_microservices_database_sips:
        condition: service_healthy

  ##############################  Medicina microservice ##############################
  medicina_microservice_sips:
    build: 
      context: ./backend
      args:
        - SRC_PATH=./Medicina
    image: medicina_microservice_sips
    environment:
      - DB_HOST=clinical_microservices_database_sips
      - DB_PORT=3306
      - APP_PORT=3000
      - APP_HOST=0.0.0.0
    ports:
      - "3703:3000"
    volumes:
      - ./backend/Medicina:/app
    restart: always
    container_name: medicina_microservice_sips
    depends_on:
      clinical_microservices_database_sips:
        condition: service_healthy
  
  ##############################  Optometria microservice ##############################
  optometria_microservice_sips:
    build: 
      context: ./backend
      args:
        - SRC_PATH=./Optometria
    image: optometria_microservice_sips
    environment:
      - DB_HOST=clinical_microservices_database_sips
      - DB_PORT=3306
      - APP_PORT=3000
      - APP_HOST=0.0.0.0
    ports:
      - "3704:3000"
    volumes:
      - ./backend/Optometria:/app
    restart: always
    container_name: optometria_microservice_sips
    depends_on:
      clinical_microservices_database_sips:
        condition: service_healthy

  ##############################  Psicologia microservice ##############################
  psicologia_microservice_sips:
    build: 
      context: ./backend
      args:
        - SRC_PATH=./Psicologia
    image: psicologia_microservice_sips
    environment:
      - DB_HOST=clinical_microservices_database_sips
      - DB_PORT=3306
      - APP_PORT=3000
      - APP_HOST=0.0.0.0
    ports:
      - "3705:3000"
    volumes:
      - ./backend/Psicologia:/app
    restart: always
    container_name: psicologia_microservice_sips
    depends_on:
      clinical_microservices_database_sips:
        condition: service_healthy
